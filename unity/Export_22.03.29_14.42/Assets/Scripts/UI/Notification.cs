using UnityEngine;
using System;

public class Notification : MonoBehaviour
{
    public enum Layout //???????? ??????
    {
        LoadCar,
        LoadParts,
        LoadField,
        InternetDisconnection,
        FailureGetCarInfo,
        FailureGetFieldInfo,
        FailureLoadCar,
        FailureLoadParts,
        FailureLoadField,
        QuitApplicationAction,
        LoadCarAction,
        ResetParts
    }

    [Header("Static")]
    public static Notification notification; //???? ???? ????

    [Header("Layout")]
    public GameObject[] layouts; //???????? ??????????

    private void Awake()
    {
        notification = this;
    }

    /* ?????????? ?????????? ???? */
    public void EnableLayout(Layout layout)
    {
        DisableLayout(); //???????? ????????

        layouts[(int)layout].SetActive(true); //???????? ??????
    }

    /* ?????????? ?????????? ???? */
    public void EnableLayout(Layout layout, Action action)
    {
        DisableLayout(); //???????? ????????

        switch (layout) //?????????? ???? ???? ????
        {
            case Layout.LoadCarAction:  //???? ???????? ?????? ????????????
                loadCarAction = action;
                break;
        }

        layouts[(int)layout].SetActive(true); //???????? ??????
    }

    /* ?????????? ???????????? ???? */
    public void DisableLayout()
    {
        for (int i = 0; i < layouts.Length; ++i) //???? ?????????? ????
        {
            layouts[i].SetActive(false); //????????
        }
    }

    /* ?????????? ???????????? ???? */
    public void DisableLayout(Layout layout)
    {
        layouts[(int)layout].SetActive(false); //????????
    }

    #region ActionLayout
    public Action loadCarAction; //???????? Action
    /* LoadCarAction?? ???????? ???? */
    public void ExcuteLoadCarAction()
    {
        loadCarAction?.Invoke();
    }

    /* QuitApplicationAction?? ???????? ???? */
    public void ExcuteQuitApplicationAction()
    {
        LocalDBController.localDBController.SaveUserJson(); //UserJson ????
        UnityMessageManager.Instance.OnMessage -= LocalDBController.localDBController.OnMessage;
        UnityEngine.SceneManagement.SceneManager.LoadScene(1); //1?? ?? ????????
    }
    #endregion
}